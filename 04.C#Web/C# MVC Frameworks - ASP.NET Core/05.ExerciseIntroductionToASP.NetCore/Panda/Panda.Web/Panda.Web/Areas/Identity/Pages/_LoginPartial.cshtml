@using Model
@inject SignInManager<PandaUser> SignInManager
@inject UserManager<PandaUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

@{
    Layout = null;
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @*<li class="nav-item">
            <a id="manage" class="nav-link nav-link-white active" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello!!!!!! @UserManager.GetUserName(User)!</a>
        </li>*@
        <li class="nav-item">
            <form id="logoutForm" class="nav-link nav-link-white active" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
        if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a  class="nav-link nav-link-white active" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"></a>
            </li>
        }
    }
    else
    {
        <div class="collapse navbar-collapse d-flex justify-content-end" id="navbarNav">
            <li class="nav-item">
                <a class="nav-link nav-link-white active" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
            <li class="nav-item">
                <a class="nav-link nav-link-white active" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
        </div>
    }
</ul>
